---
import { Icon } from "astro-icon";
import SocialMediaLink from "./SocialMediaLink.astro";
---

<footer class="px-5vw py-6 text-xs md:py-12">
  <div class="mx-auto flex max-w-7xl flex-col items-center justify-between gap-2 xl:flex-row">
    <ul class="flex gap-2">
      <SocialMediaLink name="prime:github" href="https://github.com/levinhkhangzz">Github</SocialMediaLink>
      <SocialMediaLink name="prime:telegram" href="https://t.me/safezxx">Telegram</SocialMediaLink>
      <SocialMediaLink name="ph:envelope-simple-fill" href="mailto:levinhkhang631@gmail.com">Email</SocialMediaLink>
    </ul>
    <div class="flex flex-col flex-wrap items-center justify-center gap-2 text-center sm:flex-row">
      <div class="flex items-center gap-2 font-bold">
        <span class="h-3 w-3">
          <Icon name="ph:copyright-bold" />
        </span>
        2023 Le Vinh Khang
      </div>

      <span class="hidden sm:inline">·</span>

      <span>
        Build with <a
          class="font-bold text-red decoration-2 underline-offset-4 hover:underline"
          href="https://astro.build/">Astro</a
        >
        and <a
          class="font-bold text-blue decoration-2 underline-offset-4 hover:underline"
          href="https://tailwindcss.com/">TailwindCSS</a
        >
      </span>

      <span class="hidden sm:inline">·</span>

      <div class="flex items-center gap-2">
        <span class="h-3 w-3">
          <Icon name="bi:spotify" class="text-green" />
        </span>
        <p id="current-track">
          <span class="font-bold">Not Playing</span> - <span>Spotify</span>
        </p>
      </div>
    </div>
  </div>
</footer>

<script>
  window.addEventListener("DOMContentLoaded", async () => {
    const CACHE_TIMEOUT = 50000;
    const API_CALL_INTERVAL = 10000;

    const get = async (url: string) => {
      const now = new Date().getTime();

      const savedJson = window.localStorage.getItem(url);

      if (savedJson !== null) {
        const prevResp = JSON.parse(savedJson);

        if (prevResp && Math.abs(now - prevResp.time) < CACHE_TIMEOUT) {
          return prevResp.data;
        }
      }

      const resp = await fetch(url);
      const json = await resp.json();
      window.localStorage.setItem(url, JSON.stringify({ time: now, data: json }));
      return json;
    };

    const setCurrentTrack = async () => {
      const currentTrack = await get("/api/current-track");
      const currentTrackContainer = document.getElementById("current-track");

      if (currentTrackContainer !== null) {
        currentTrackContainer.innerHTML = currentTrack.isPlaying
          ? `<a class="font-bold text-green decoration-2 underline-offset-4 hover:underline" href="${currentTrack.songUrl}">${currentTrack.name}</a> - <span>${currentTrack.artist}</span>`
          : `<span class="font-bold">Not Playing</span> - <span>Spotify</span>`;
      }
    };

    await setCurrentTrack();

    window.setInterval(setCurrentTrack, API_CALL_INTERVAL);
  });
</script>
